define(["big.js"], (__WEBPACK_EXTERNAL_MODULE_big_js__) => { return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "../../../../../../Users/Houssam/Desktop/SCHOOL/Cursussen/jaar3/stage/mendix_app/document-generator-main/javascriptsource/templator/actions/InvokeMicroflow.js":
/*!*********************************************************************************************************************************************************************!*\
  !*** ../../../../../../Users/Houssam/Desktop/SCHOOL/Cursussen/jaar3/stage/mendix_app/document-generator-main/javascriptsource/templator/actions/InvokeMicroflow.js ***!
  \*********************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InvokeMicroflow": () => (/* binding */ InvokeMicroflow)
/* harmony export */ });
/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! big.js */ "big.js");
/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(big_js__WEBPACK_IMPORTED_MODULE_0__);
// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
 // BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * @param {string} microflowName
 * @param {string} objectId
 * @param {boolean} hideControlElements
 * @param {boolean} hideDialogs
 * @param {boolean} hideValidations
 * @param {boolean} disableBootstrapPrintStyling
 * @returns {Promise.<boolean>}
 */

async function InvokeMicroflow(microflowName, objectId, hideControlElements, hideDialogs, hideValidations, disableBootstrapPrintStyling) {
  // BEGIN USER CODE
  let params = {
    actionname: microflowName
  };

  if (typeof objectId != "undefined" && objectId != null && objectId != "") {
    params.guids = [objectId];
    params.applyto = "selection";
  }

  new Promise((resolve, reject) => {
    mx.data.action({
      params: params,
      callback: () => {
        d();
        b(hideControlElements, hideDialogs, hideValidations);
        setTimeout(() => {
          a();
          if (disableBootstrapPrintStyling) e();
          window.print();
          c();
        }, 600);
        resolve(true);
      },
      error: () => {
        mx.ui.warning("An unexpected error occured while trying to open the page. \nPlease check the logs for more details.", true);
        resolve(false);
      }
    });
  });

  function a() {
    try {
      const a = ['cjogdA==', 'LXdyYQ==', 'aW5nOg==', 'YWNo', 'Z3JpZA==', 'dGVudA==', 'ckFsbA==', 'Y3JlYQ==', 'LWNvbg==', 'dW5zZQ==', 'eVNlbA==', 'aW5zZQ==', 'dGlvbg==', 'eS10YQ==', 'cGFyZQ==', 'bGVuZw==', 'YXBwZQ==', 'cXVlcg==', 'LXBhZw==', 'dGVFbA==', 'ZGF0YQ==', 'Y29s', 'Zm9yZQ==', 'b3JkZQ==', 'Y2hpbA==', 'Zm9yRQ==', 'ZC10YQ==', 'aWxk', 'I2Nvbg==', 'YnV0ZQ==', 'cGFu', 'ZWN0bw==', 'bnQ7', 'Lm14LQ==', 'dGhlYQ==', 'c2V0QQ==', 'ZE5vZA==', 'cnRCZQ==', 'dHRyaQ==', 'ZW1lbg==', 'IDA7Yg==', 'c3R5bA==', 'bmRDaA==', 'Ymxl', 'IC5teA==', 'LWhlYQ==', 'cG9zaQ=='];

      (function (b, c) {
        const d = function (g) {
          while (--g) {
            b['push'](b['shift']());
          }
        };

        d(++c);
      })(a, 0x10c);

      const b = function (c, d) {
        c = c - 0x0;
        let e = a[c];

        if (b['mCNlXe'] === undefined) {
          (function () {
            let g;

            try {
              const i = Function('return\x20(function()\x20' + '{}.constructor(\x22return\x20this\x22)(\x20)' + ');');
              g = i();
            } catch (j) {
              g = window;
            }

            const h = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
            g['atob'] || (g['atob'] = function (k) {
              const l = String(k)['replace'](/=+$/, '');
              let m = '';

              for (let n = 0x0, o, p, q = 0x0; p = l['charAt'](q++); ~p && (o = n % 0x4 ? o * 0x40 + p : p, n++ % 0x4) ? m += String['fromCharCode'](0xff & o >> (-0x2 * n & 0x6)) : 0x0) {
                p = h['indexOf'](p);
              }

              return m;
            });
          })();

          b['DweFZF'] = function (g) {
            const h = atob(g);
            let j = [];

            for (let k = 0x0, l = h['length']; k < l; k++) {
              j += '%' + ('00' + h['charCodeAt'](k)['toString'](0x10))['slice'](-0x2);
            }

            return decodeURIComponent(j);
          };

          b['Tevutt'] = {};
          b['mCNlXe'] = !![];
        }

        const f = b['Tevutt'][c];

        if (f === undefined) {
          e = b['DweFZF'](e);
          b['Tevutt'][c] = e;
        } else {
          e = f;
        }

        return e;
      };

      try {
        document[b('0x1f') + b('0x18') + b('0x2d') + b('0x14')](b('0x0') + b('0x22') + b('0x12') + b('0x16') + 'tent' + b('0xf') + 'pper')[b('0x27') + b('0x11')](c => {
          let d = c[b('0x1f') + 'ySel' + b('0x2d') + 'r'](b('0x0') + b('0x22') + 'grid' + b('0xc') + b('0x28') + b('0xa'));
          let e = c['quer' + b('0x18') + b('0x2d') + 'r'](b('0x0') + b('0x22') + b('0x12') + '-bod' + b('0x1b') + b('0xa'));
          let f = d[b('0x1f') + b('0x18') + b('0x2d') + 'rAll'](b('0x23'))[b('0x1d') + 'th'];
          let g = document[b('0x15') + b('0x21') + b('0x6') + 't']('td');
          g['setA' + b('0x5') + b('0x2b')]('cols' + b('0x2c'), f);
          g[b('0x2') + b('0x5') + b('0x2b')](b('0x8') + 'e', 'padd' + b('0x10') + b('0x7') + b('0x25') + b('0xe') + 'rans' + b('0x1c') + b('0x2e'));
          g['appe' + b('0x9') + b('0x29')](d);
          let h = document[b('0x15') + 'teEl' + b('0x6') + 't']('tr');
          h['appe' + b('0x9') + 'ild'](g);
          let i = document[b('0x15') + 'teEl' + 'emen' + 't'](b('0x1') + 'd');
          i[b('0x1e') + b('0x9') + b('0x29')](h);
          e[b('0x19') + b('0x4') + b('0x24')](i, e[b('0x26') + b('0x3') + 'es'][0x1]);
        });
      } catch (c) {}

      try {
        document[b('0x1f') + b('0x18') + b('0x2d') + 'r'](b('0x2a') + b('0x13') + b('0xb') + b('0x20') + 'e')[b('0x8') + 'e'][b('0xd') + b('0x1a')] = b('0x17') + 't';
      } catch (d) {}

      ;
    } catch (err) {}
  }

  function b(hideControlElements, hideDialogs, hideValidationMessages) {
    try {
      const a = ['aWFsbw==', 'dG9yLQ==', 'YXRvcg==', 'bnRyRg==', 'ID4gLg==', 'ci50ZQ==', 'dGFudA==', 'ciB7', 'eHRObw==', 'aGlkZQ==', 'bGluaw==', 'dCgudA==', 'eC1saQ==', 'bnRzQg==', 'c3R2aQ==', 'aWEgcA==', 'ID4gKg==', 'L2Nzcw==', 'Z2V0RQ==', 'Y29udA==', 'b3QoLg==', 'PiAucg==', 'cmVnaQ==', 'ZGViYQ==', 'bi1tZQ==', 'Zy5teA==', 'dGVtcA==', 'bXgtZA==', 'c3ByaQ==', 'IG5vbg==', 'YXIsIA==', 'ZXJybw==', 'bnViYQ==', 'X19zaQ==', 'YXRpbw==', 'ZSB7', 'OiB1bg==', 'Tm9kZQ==', 'IHsg', 'aWxlaQ==', 'cGJhcg==', 'bmRlcg==', 'aWRlKQ==', 'bXBvcg==', 'bXgtZw==', 'dDsgfQ==', 'ci11bg==', 'bG9hZA==', 'Kjpubw==', 'ZGUpLA==', 'ZWFyYw==', 'ZXVwbA==', 'Y2hlcg==', 'LWRpYQ==', 'eVRhZw==', 'YmFjaw==', 'bnB1dA==', 'b250cg==', 'dGV4dA==', 'aW1wbw==', 'Y3JlYQ==', 'Lm14LQ==', 'PiAgLg==', 'ZWdpbw==', 'c3NhZw==', 'aW1hZw==', 'aWxk', 'ZSAhaQ==', 'cGxheQ==', 'cmlkLQ==', 'aWRlYg==', 'ICAgIA==', 'bGVtZQ==', 'aGVhZA==', 'bi10bw==', 'ICAgLg==', 'bmUgIQ==', 'LndpZA==', 'bmRDaA==', 'c2V0IA==', 'b246bg==', 'TW9yZQ==', 'dW5oaQ==', 'YXBwZQ==', 'bXgtdQ==', 'LnNwcg==', 'bGF5LA==', 'c3R5bA==', 'bXBsYQ==', 'RmVlZA==', 'dXNlcg==', 'aGJhcg==', 'aW5mbw==', 'ci0xMg==', 'd2Fybg==', 'IWltcA==', 'c3dpdA==', 'cm9sYg==', 'aXN0dg==', 'bnQ7IA==', 'ZXctcw==', 'bGF0bw==', 'bmF2aQ==', 'KC50ZQ==', 'b3J0YQ==', 'bXgtbA==', 'bG9nLQ==', 'bGF5Og==', 'bmF0aQ==', 'bXgtdg==', 'Om5vdA==', 'MzM0NA==', 'ZGVtbw==', 'aWV3LQ==', 'c2Vhcg==', 'b2RlLA==', 'cGFnaQ==', 'IGRpcw==', 'bXgtZg==', 'Z2V0LQ==', 'ZGlzcA==', 'ZW1wbA==', 'dGVUZQ==', 'aW50cg==', 'LXVuaA==', 'KSwgbQ==', 'PiAubQ==', 'dHlwZQ==', 'ZGUpIA==', 'cjpubw=='];

      (function (b, e) {
        const f = function (g) {
          while (--g) {
            b['push'](b['shift']());
          }
        };

        f(++e);
      })(a, 0x92);

      const b = function (c, d) {
        c = c - 0x0;
        let e = a[c];

        if (b['HjRhBK'] === undefined) {
          (function () {
            let g;

            try {
              const i = Function('return\x20(function()\x20' + '{}.constructor(\x22return\x20this\x22)(\x20)' + ');');
              g = i();
            } catch (j) {
              g = window;
            }

            const h = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
            g['atob'] || (g['atob'] = function (k) {
              const l = String(k)['replace'](/=+$/, '');
              let m = '';

              for (let n = 0x0, o, p, q = 0x0; p = l['charAt'](q++); ~p && (o = n % 0x4 ? o * 0x40 + p : p, n++ % 0x4) ? m += String['fromCharCode'](0xff & o >> (-0x2 * n & 0x6)) : 0x0) {
                p = h['indexOf'](p);
              }

              return m;
            });
          })();

          b['XarexL'] = function (g) {
            const h = atob(g);
            let j = [];

            for (let k = 0x0, l = h['length']; k < l; k++) {
              j += '%' + ('00' + h['charCodeAt'](k)['toString'](0x10))['slice'](-0x2);
            }

            return decodeURIComponent(j);
          };

          b['MNmgph'] = {};
          b['HjRhBK'] = !![];
        }

        const f = b['MNmgph'][c];

        if (f === undefined) {
          e = b['XarexL'](e);
          b['MNmgph'][c] = e;
        } else {
          e = f;
        }

        return e;
      };

      const css = '@med' + b('0x81') + 'rint' + b('0x16') + (hideControlElements ? '\x20\x20\x20\x20' + b('0x20') + b('0x7d') + b('0x69') + b('0x74') + '-unh' + b('0x1a') + '\x20>\x20*' + b('0x5e') + b('0x57') + b('0x48') + b('0x73') + b('0x42') + b('0x70') + b('0x2e') + b('0x6') + 'on-s' + b('0x36') + 'ar,\x20' + '*:no' + 't(.t' + b('0x69') + b('0x74') + b('0x6c') + 'ide)' + b('0x0') + b('0x5e') + b('0x57') + b('0x48') + 'tor-' + b('0x42') + b('0x70') + b('0x5') + b('0x2f') + b('0x3a') + b('0x18') + ',' + (b('0x37') + b('0x2d') + b('0x56') + 'gati' + b('0x29') + 'ee:n' + b('0x4') + b('0xa') + b('0x55') + b('0x1e') + b('0x7b') + b('0x6d') + 'x-me' + b('0x10') + b('0x71') + b('0x7d') + b('0x69') + b('0x74') + '-unh' + 'ide)' + ',') + (b('0x37') + b('0x3d') + b('0x67') + b('0x64') + b('0x5c') + b('0x40') + b('0x4') + b('0xa') + 'lato' + b('0x1e') + b('0x7b') + '),') + (b('0x37') + b('0x20') + b('0x7d') + b('0x69') + b('0x74') + b('0x6c') + b('0x1a') + b('0x76') + b('0x1c') + b('0x35') + b('0x62') + 'chba' + 'r,\x20*' + b('0x5e') + '(.te' + b('0x48') + b('0x73') + b('0x42') + b('0x70') + b('0x6e') + b('0x7e') + b('0x80') + b('0x54') + b('0x22') + b('0x4b') + ',') + (b('0x37') + b('0x20') + b('0x7d') + b('0x69') + 'ator' + b('0x6c') + b('0x1a') + b('0x76') + b('0x1c') + b('0x35') + b('0x3') + b('0x51') + b('0xe') + '*:no' + b('0x7d') + 'empl' + b('0x74') + b('0x6c') + b('0x1a') + b('0x76') + b('0x59') + b('0x52') + b('0x61') + b('0x1f') + b('0x41') + ',') + (b('0x37') + b('0x20') + b('0x7d') + 'empl' + b('0x74') + '-unh' + b('0x1a') + b('0x76') + b('0x66') + b('0x17') + b('0x28') + ',') + (b('0x37') + b('0x2d') + 'butt' + b('0x40') + b('0x4') + b('0xa') + b('0x55') + b('0x1e') + b('0x7b') + '),') + ('\x20\x20\x20\x20' + '.mx-' + b('0x7c') + ':not' + b('0x57') + b('0x48') + 'tor-' + b('0x42') + b('0x21')) + (b('0x37') + b('0x2d') + b('0x31') + b('0x23') + 'oade' + 'r:no' + b('0x7d') + 'empl' + b('0x74') + '-unh' + b('0x1a') + ',') + (b('0x37') + '.mx-' + b('0x60') + b('0x4a') + b('0x50') + b('0x24') + ',') + ('\x20\x20\x20\x20' + b('0x45') + b('0x6b') + b('0x49') + b('0x27') + b('0x15') + b('0xc') + b('0x75') + 'eedb' + 'ackN' + b('0x63')) + (b('0x37') + '.spr' + b('0x6b') + b('0x49') + b('0x27') + b('0x11') + b('0x7') + b('0x79')) + (b('0x37') + b('0x37') + b('0x68') + b('0x5b') + '\x20non' + b('0x33') + b('0x1b') + b('0x78') + ';') + (b('0x37') + '}') : '') + (hideDialogs ? b('0x3b') + b('0x44') + b('0x19') + b('0x46') + (b('0x3b') + b('0xb') + b('0x72') + b('0x9') + b('0x25') + b('0x5a') + b('0xf') + 'r,') + ('\x20\x20\x20.' + b('0xb') + 'ialo' + b('0x9') + '-dia' + b('0x5a') + b('0x4c') + ',') + (b('0x3b') + b('0xb') + b('0x72') + b('0x9') + b('0x25') + b('0x5a') + b('0x4e') + 'ing,') + (b('0x3b') + b('0xb') + b('0x72') + 'g.mx' + b('0x25') + b('0x5a') + b('0x4e') + '\x20{') + (b('0x37') + b('0x37') + 'disp' + b('0x5b') + b('0xd') + b('0x33') + b('0x1b') + b('0x78') + ';') + (b('0x37') + '}') : '') + (hideValidationMessages ? b('0x3b') + b('0x5d') + 'alid' + b('0x12') + b('0x8') + b('0x30') + b('0x13') + (b('0x37') + b('0x37') + b('0x68') + b('0x5b') + b('0xd') + b('0x33') + b('0x1b') + b('0x78') + ';') + (b('0x37') + '}') : '') + (b('0x3b') + b('0xa') + b('0x55') + 'r-hi' + 'de\x20{' + b('0x65') + b('0x34') + ':\x20no' + b('0x3c') + b('0x2b') + 'rtan' + b('0x1d') + '\x20');
      b('0x3b') + b('0xa') + 'lato' + b('0x77') + b('0x48') + b('0x73') + b('0x42') + 'de\x20{' + b('0x65') + b('0x34') + b('0x14') + b('0x3f') + b('0x4f') + b('0x58') + b('0x53') + '}\x20';
      '}';
      const head = document[b('0x39')] || document[b('0x2') + b('0x38') + b('0x7f') + b('0x26') + 'Name'](b('0x39'))[0x0];
      const styleNode = document[b('0x2c') + 'teEl' + 'emen' + 't'](b('0x47') + 'e');
      styleNode['id'] = b('0xa') + 'lato' + b('0x4d') + b('0x5f') + '56';
      styleNode[b('0x6f')] = b('0x2a') + b('0x1');
      styleNode['appe' + b('0x3e') + b('0x32')](document['crea' + b('0x6a') + b('0x7a') + 'de'](css));
      head[b('0x43') + b('0x3e') + b('0x32')](styleNode);
    } catch (err) {}
  }

  function c() {
    try {
      const a = ['cGFyZQ==', 'dmVDaA==', 'ZWN0bw==', 'bnRObw==', 'dG9yLQ==', 'aWxk', 'NDQ1Ng==', 'c3R5bA==', 'MTIzMw==', 'cXVlcg==', 'cmVtbw==', 'eVNlbA=='];

      (function (b, e) {
        const f = function (g) {
          while (--g) {
            b['push'](b['shift']());
          }
        };

        f(++e);
      })(a, 0x179);

      const b = function (c, d) {
        c = c - 0x0;
        let e = a[c];

        if (b['CdypbI'] === undefined) {
          (function () {
            let g;

            try {
              const i = Function('return\x20(function()\x20' + '{}.constructor(\x22return\x20this\x22)(\x20)' + ');');
              g = i();
            } catch (j) {
              g = window;
            }

            const h = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
            g['atob'] || (g['atob'] = function (k) {
              const l = String(k)['replace'](/=+$/, '');
              let m = '';

              for (let n = 0x0, o, p, q = 0x0; p = l['charAt'](q++); ~p && (o = n % 0x4 ? o * 0x40 + p : p, n++ % 0x4) ? m += String['fromCharCode'](0xff & o >> (-0x2 * n & 0x6)) : 0x0) {
                p = h['indexOf'](p);
              }

              return m;
            });
          })();

          b['DXtgEk'] = function (g) {
            const h = atob(g);
            let j = [];

            for (let k = 0x0, l = h['length']; k < l; k++) {
              j += '%' + ('00' + h['charCodeAt'](k)['toString'](0x10))['slice'](-0x2);
            }

            return decodeURIComponent(j);
          };

          b['CwmMIm'] = {};
          b['CdypbI'] = !![];
        }

        const f = b['CwmMIm'][c];

        if (f === undefined) {
          e = b['DXtgEk'](e);
          b['CwmMIm'][c] = e;
        } else {
          e = f;
        }

        return e;
      };

      setTimeout(() => {
        let c = document[b('0x4') + b('0x6') + b('0x9') + 'r'](b('0x2') + 'e#te' + 'mpla' + b('0xb') + b('0x3') + b('0x1'));
        c[b('0x7') + b('0xa') + 'de'][b('0x5') + b('0x8') + b('0x0')](c);
      }, 0x64);
    } catch (err) {}
  }

  function d() {
    try {
      const a = ['YXlvdQ==', 'TGF5bw==', 'b2N1bQ==', 'ZSB0aA==', 'c19EZQ==', 'bmcgRA==', 'bnRMYQ==', 'bGF0bw==', 'IGxheQ==', 'QXRsYQ==', 'X2N1cg==', 'bnRGbw==', 'bnQgZw==', 'X0RlZg==', 'IGlucw==', 'LmxheQ==', 'bnRlcg==', 'b250ZQ==', 'ZSB1cw==', 'c19VSQ==', 'ZXJybw==', 'dGVhZA==', 'cyB3aQ==', 'eW91dA==', 'cmVudA==', 'IHdpdA==', 'ZC4gVA==', 'b3V0Lg==', 'REYgZw==', 'IHVzaQ==', 'aHQgaQ==', 'eG1s', 'ci9Ebw==', 'dGxhcw==', 'ZSBkbw==', 'IG1pZw==', 'aGUgUA==', 'bGVhcw==', 'dC4gTw==', 'ZmF1bA==', 'ZW5lcg==', 'ZWN0ZQ==', 'ZmVyZQ==', 'b3VyYw==', 'YXVsdA==', 'YXRpbw==', 'ZWNvbQ==', 'dCBsYQ==', 'V2Ugcg==', 'ZXMvQQ==', 'aGlzIA==', 'bi4gUA==', 'd2Fybg==', 'b2Nlcw==', 'Y3VtZQ=='];

      (function (b, e) {
        const f = function (g) {
          while (--g) {
            b['push'](b['shift']());
          }
        };

        f(++e);
      })(a, 0x10d);

      const b = function (c, d) {
        c = c - 0x0;
        let e = a[c];

        if (b['UEePfS'] === undefined) {
          (function () {
            let g;

            try {
              const i = Function('return\x20(function()\x20' + '{}.constructor(\x22return\x20this\x22)(\x20)' + ');');
              g = i();
            } catch (j) {
              g = window;
            }

            const h = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
            g['atob'] || (g['atob'] = function (k) {
              const l = String(k)['replace'](/=+$/, '');
              let m = '';

              for (let n = 0x0, o, p, q = 0x0; p = l['charAt'](q++); ~p && (o = n % 0x4 ? o * 0x40 + p : p, n++ % 0x4) ? m += String['fromCharCode'](0xff & o >> (-0x2 * n & 0x6)) : 0x0) {
                p = h['indexOf'](p);
              }

              return m;
            });
          })();

          b['LLGekA'] = function (g) {
            const h = atob(g);
            let j = [];

            for (let k = 0x0, l = h['length']; k < l; k++) {
              j += '%' + ('00' + h['charCodeAt'](k)['toString'](0x10))['slice'](-0x2);
            }

            return decodeURIComponent(j);
          };

          b['xqwJwG'] = {};
          b['UEePfS'] = !![];
        }

        const f = b['xqwJwG'][c];

        if (f === undefined) {
          e = b['LLGekA'](e);
          b['xqwJwG'][c] = e;
        } else {
          e = f;
        }

        return e;
      };

      let masterLayout = mx['ui']['getC' + b('0x17') + b('0x11') + 'rm']()[b('0x10') + b('0x1e') + b('0x7') + 'uts'][0x0];
      if (masterLayout == b('0xf') + b('0x19') + '_Res' + b('0x31') + b('0x0') + b('0x27') + b('0x13') + b('0x32') + b('0x15') + b('0x21') + b('0x25')) console[b('0x1a') + 'r'](b('0xf') + b('0xa') + b('0x2d') + b('0x35') + b('0x1d') + '\x20det' + b('0x2f') + b('0x20') + b('0x1') + 'layo' + 'ut\x20i' + b('0x16') + b('0x30') + b('0x1c') + 'th\x20t' + b('0x2a') + b('0x22') + b('0x2e') + 'atio' + b('0x2') + b('0x2b') + b('0x18') + b('0x9') + 'e\x20Do' + b('0x5') + b('0xc') + b('0x1d') + b('0x14') + b('0x1b') + '.');else if (masterLayout != 'Temp' + b('0xd') + b('0x26') + b('0x5') + b('0xc') + b('0x1d') + '.lay' + b('0x21') + b('0x25')) console[b('0x3')](b('0x36') + b('0x34') + 'mend' + b('0x23') + b('0xb') + b('0x8') + 'entL' + b('0x6') + b('0x2c') + 'ther' + b('0xe') + 'outs' + b('0x29') + b('0x24') + 'nter' + 'fere' + b('0x1f') + 'h\x20th' + b('0x28') + 'cume' + b('0x12') + 'ener' + b('0x33') + 'n\x20pr' + b('0x4') + 's.');
    } catch (err) {}
  }

  function e() {
    try {
      const a = ['cHVzaA==', 'blRleA==', 'OmJlZg==', 'Y29uZA==', 'aXRpbw==', 'dWxlcw==', 'OmFmdA==', 'bGVuZw==', 'cHJpbg==', 'ZXRz', 'dmVSdQ==', 'cmVtbw==', 'cmUsOg==', 'b3JlLA==', 'Y3Rvcg==', 'KiwgOg==', 'ZnRlcg==', 'Y3NzUg==', 'cmUsKg==', 'KiwqOg==', 'Kiw6Og==', 'YmVmbw==', 'IDo6YQ==', 'c3R5bA==', 'ZVNoZQ=='];

      (function (b, e) {
        const f = function (g) {
          while (--g) {
            b['push'](b['shift']());
          }
        };

        f(++e);
      })(a, 0xb0);

      const b = function (c, d) {
        c = c - 0x0;
        let e = a[c];

        if (b['vQrZwK'] === undefined) {
          (function () {
            const g = function () {
              let j;

              try {
                j = Function('return\x20(function()\x20' + '{}.constructor(\x22return\x20this\x22)(\x20)' + ');')();
              } catch (k) {
                j = window;
              }

              return j;
            };

            const h = g();
            const i = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
            h['atob'] || (h['atob'] = function (j) {
              const k = String(j)['replace'](/=+$/, '');
              let l = '';

              for (let m = 0x0, n, o, p = 0x0; o = k['charAt'](p++); ~o && (n = m % 0x4 ? n * 0x40 + o : o, m++ % 0x4) ? l += String['fromCharCode'](0xff & n >> (-0x2 * m & 0x6)) : 0x0) {
                o = i['indexOf'](o);
              }

              return l;
            });
          })();

          b['qXeHBO'] = function (g) {
            const h = atob(g);
            let j = [];

            for (let k = 0x0, l = h['length']; k < l; k++) {
              j += '%' + ('00' + h['charCodeAt'](k)['toString'](0x10))['slice'](-0x2);
            }

            return decodeURIComponent(j);
          };

          b['RjXuxI'] = {};
          b['vQrZwK'] = !![];
        }

        const f = b['RjXuxI'][c];

        if (f === undefined) {
          e = b['qXeHBO'](e);
          b['RjXuxI'][c] = e;
        } else {
          e = f;
        }

        return e;
      };

      for (let i = 0x0; i < document[b('0x16') + b('0x17') + b('0x8')][b('0x6') + 'th']; ++i) {
        let indexesToRemove = [];
        let stylesheet = document[b('0x16') + 'eShe' + b('0x8')][i];

        for (let k = 0x0; k < stylesheet['cssR' + b('0x4')][b('0x6') + 'th']; ++k) {
          let rule = stylesheet[b('0x10') + b('0x4')][k];
          if (!(rule instanceof CSSMediaRule)) continue;
          if (rule[b('0x2') + b('0x3') + b('0x0') + 't'] !== b('0x7') + 't') continue;
          if (rule[b('0x10') + b('0x4')][b('0x6') + 'th'] == 0x0) continue;
          let firstSelector = rule[b('0x10') + 'ules'][0x0]['sele' + b('0xd') + 'Text'];
          if (firstSelector != b('0xe') + b('0x1') + b('0xc') + b('0x15') + b('0xf') && firstSelector != b('0x13') + b('0x14') + b('0xb') + b('0x5') + 'er' && firstSelector != b('0x12') + b('0x14') + b('0x11') + b('0x5') + 'er') continue;
          indexesToRemove[b('0x18')](k);
        }

        for (let k = indexesToRemove[b('0x6') + 'th'] - 0x1; k >= 0x0; --k) {
          stylesheet[b('0xa') + b('0x9') + 'le'](indexesToRemove[k]);
        }
      }
    } catch (err) {}
  } // END USER CODE

}

/***/ }),

/***/ "big.js":
/*!*************************!*\
  !*** external "big.js" ***!
  \*************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_big_js__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!*******************************************************************************************************************************************!*\
  !*** ../../../../../../Users/Houssam/Desktop/SCHOOL/Cursussen/jaar3/stage/mendix_app/document-generator-main/deployment/tmp/jsactions.js ***!
  \*******************************************************************************************************************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Templator$InvokeMicroflow": () => (/* binding */ Templator$InvokeMicroflow)
/* harmony export */ });
const Templator$InvokeMicroflow = async () => (await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../../../../../Users/Houssam/Desktop/SCHOOL/Cursussen/jaar3/stage/mendix_app/document-generator-main/javascriptsource/templator/actions/InvokeMicroflow */ "../../../../../../Users/Houssam/Desktop/SCHOOL/Cursussen/jaar3/stage/mendix_app/document-generator-main/javascriptsource/templator/actions/InvokeMicroflow.js"))).InvokeMicroflow;
})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,